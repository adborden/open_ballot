"""Initial migration

Revision ID: 1f2296edbc75
Revises: 7417382a3f1
Create Date: 2014-01-19 23:04:58.877817

"""

# revision identifiers, used by Alembic.
revision = '1f2296edbc75'
down_revision = '7417382a3f1'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
from sqlalchemy import func

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table(u'consultant',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table(u'service',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table(u'ballot_type',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('percent_required', sa.Numeric(precision=2, scale=2), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table(u'employer',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table(u'tag',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table(u'election',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table(u'donor',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('first_name', sa.Text(), nullable=False),
    sa.Column('last_name', sa.Text(), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('employer_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['employer_id'], [u'employer.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('first_name','last_name','latitude','longitude')
    )
    op.create_index('ix_donor_employer_id', 'donor', ['employer_id'], unique=False)
    op.create_table(u'committee',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('filer_id', sa.Text(), nullable=True),
    sa.Column('sponsor', sa.Text(), nullable=True),
    sa.Column('election_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['election_id'], [u'election.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_committee_election_id', 'committee', ['election_id'], unique=False)
    op.create_table(u'ballot_measure',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('name', sa.Text(), nullable=True),
    sa.Column('prop_id', sa.Text(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('num_yes', sa.Integer(), nullable=True),
    sa.Column('num_no', sa.Integer(), nullable=True),
    sa.Column('passed', sa.Boolean(), nullable=True),
    sa.Column('ballot_type_id', postgresql.UUID(), nullable=True),
    sa.Column('election_id', postgresql.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['ballot_type_id'], [u'ballot_type.id'], ),
    sa.ForeignKeyConstraint(['election_id'], [u'election.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_ballot_measure_election_id', 'ballot_measure', ['election_id'], unique=False)
    op.create_index('ix_ballot_measure_ballot_type_id', 'ballot_measure', ['ballot_type_id'], unique=False)
    op.create_table(u'donation',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('donor_id', postgresql.UUID(), nullable=False),
    sa.Column('committee_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['committee_id'], [u'committee.id'], ),
    sa.ForeignKeyConstraint(['donor_id'], [u'donor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_donation_committee_id', 'donation', ['committee_id'], unique=False)
    op.create_index('ix_donation_donor_id', 'donation', ['donor_id'], unique=False)
    op.create_table(u'contract',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('payment', sa.Float(), nullable=False),
    sa.Column('consultant_id', postgresql.UUID(), nullable=False),
    sa.Column('service_id', postgresql.UUID(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('committee_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['committee_id'], [u'committee.id'], ),
    sa.ForeignKeyConstraint(['consultant_id'], [u'consultant.id'], ),
    sa.ForeignKeyConstraint(['service_id'], [u'service.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_contract_consultant_id', 'contract', ['consultant_id'], unique=False)
    op.create_index('ix_contract_service_id', 'contract', ['service_id'], unique=False)
    op.create_index('ix_contract_committee_id', 'contract', ['committee_id'], unique=False)
    op.create_table(u'stance',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('voted_yes', sa.Boolean(), nullable=False),
    sa.Column('committee_id', postgresql.UUID(), nullable=False),
    sa.Column('ballot_measure_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['ballot_measure_id'], [u'ballot_measure.id'], ),
    sa.ForeignKeyConstraint(['committee_id'], [u'committee.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('committee_id','ballot_measure_id')
    )
    op.create_index('ix_stance_ballot_measure_id', 'stance', ['ballot_measure_id'], unique=False)
    op.create_index('ix_stance_committee_id', 'stance', ['committee_id'], unique=False)
    op.create_table(u'ballot_measure_tags',
    sa.Column('id', postgresql.UUID(), server_default=func.uuid_generate_v4(), nullable=False),
    sa.Column('created', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('updated', sa.DateTime(timezone=True), server_default=func.now(), nullable=False),
    sa.Column('ballot_measure_id', postgresql.UUID(), nullable=False),
    sa.Column('tag_id', postgresql.UUID(), nullable=False),
    sa.ForeignKeyConstraint(['ballot_measure_id'], [u'ballot_measure.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], [u'tag.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('ballot_measure_id','tag_id')
    )
    op.create_index('ix_ballot_measure_tags_tag_id', 'ballot_measure_tags', ['tag_id'], unique=False)
    op.create_index('ix_ballot_measure_tags_ballot_measure_id', 'ballot_measure_tags', ['ballot_measure_id'], unique=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_ballot_measure_tags_ballot_measure_id', 'ballot_measure_tags')
    op.drop_index('ix_ballot_measure_tags_tag_id', 'ballot_measure_tags')
    op.drop_table(u'ballot_measure_tags')
    op.drop_index('ix_stance_committee_id', 'stance')
    op.drop_index('ix_stance_ballot_measure_id', 'stance')
    op.drop_table(u'stance')
    op.drop_index('ix_contract_committee_id', 'contract')
    op.drop_index('ix_contract_service_id', 'contract')
    op.drop_index('ix_contract_consultant_id', 'contract')
    op.drop_table(u'contract')
    op.drop_index('ix_donation_donor_id', 'donation')
    op.drop_index('ix_donation_committee_id', 'donation')
    op.drop_table(u'donation')
    op.drop_index('ix_ballot_measure_ballot_type_id', 'ballot_measure')
    op.drop_index('ix_ballot_measure_election_id', 'ballot_measure')
    op.drop_table(u'ballot_measure')
    op.drop_index('ix_committee_election_id', 'committee')
    op.drop_table(u'committee')
    op.drop_index('ix_donor_employer_id', 'donor')
    op.drop_table(u'donor')
    op.drop_table(u'election')
    op.drop_table(u'tag')
    op.drop_table(u'employer')
    op.drop_table(u'ballot_type')
    op.drop_table(u'service')
    op.drop_table(u'consultant')
    ### end Alembic commands ###
